{"version":3,"sources":["components/app-title/index.js","components/app-title/app-title.js","components/app-status/index.js","components/app-status/app-status.js","components/search-panel/search-panel.js","components/search-panel/index.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/todo-list-item.js","components/todo-list-item/index.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/item-add-form.js","components/item-add-form/index.js","components/app/App.js","components/app/index.js","index.js"],"names":["AppTitle","Typography","variant","component","AppStatus","toDo","done","xs","md","color","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","classes","this","Input","className","input","placeholder","inputProps","onChange","Component","withStyles","theme","marginLeft","spacing","marginRight","marginBottom","ItemStatusFilter","buttons","name","label","filter","onFilterChange","map","isActive","variantActive","colorActive","Button","onClick","ButtonGroup","aria-label","useStyles","makeStyles","iconButton","padding","divider","height","margin","formControl","flexDirection","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","editeItem","isEditable","classNames","Paper","preventDefault","FormControl","IconButton","disabled","type","Divider","orientation","TodoList","todos","elements","item","id","itemProps","ItemAddForm","isError","minInputLength","onLabelChange","length","nonSubmit","onSubmit","onItemAdded","onEditableHandler","onEditableSave","prevProps","editableValue","isSubmitable","changeSubmit","error","helpertext","startIcon","flex","paddingLeft","App","startId","todoData","createTodoItem","editableId","idx","findIndex","el","changeItemLabel","slice","deleteItem","addItem","text","newItem","toggleProperty","toLocalStorage","localStorage","setItem","JSON","stringify","Date","valueOf","arr","propName","oldItem","items","toLowerCase","indexOf","prevState","ArrayFromLocalStorage","parse","getItem","visibleItems","search","doneCount","todoCount","find","Grid","container","justify","alignItems","root","Card","card","CardContent","maxWidth","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddc1a18a.chunk.js","sourcesContent":["import AppTitle from './app-title';\r\nexport default AppTitle;\r\n","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './app-title.scss';\r\n\r\nconst AppTitle = () => {\r\n  return (\r\n    <Typography variant=\"h4\" component=\"h1\">\r\n      Todo List\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default AppTitle;\r\n","import AppStatus from './app-status';\r\nexport default AppStatus;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './app-status.scss';\r\n\r\nconst AppStatus = ({ toDo, done }) => {\r\n  return (\r\n      <Typography xs={3} md={2} variant=\"h6\" component=\"h2\" color=\"textSecondary\">\r\n        {toDo} more to do, {done} done\r\n        </Typography>\r\n  )\r\n}\r\n\r\nexport default AppStatus;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport './search-panel.css';\r\n\r\nconst useStyles = theme => ({\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        marginBottom: '1px',\r\n    },\r\n});\r\n\r\nclass SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Input\r\n                variant=\"outlined\"\r\n                className={classes.input}\r\n                placeholder=\"Type to search\"\r\n                inputProps={{ 'aria-label': 'Type to search' }}\r\n                value={this.state.term}\r\n                onChange={this.onSearchChange}\r\n            />\r\n        );\r\n    };\r\n};\r\n\r\nexport default withStyles(useStyles)(SearchPanel);\r\n","import SearchPanel from './search-panel';\r\nexport default SearchPanel;\r\n","import ItemStatusFilter from './item-status-filter';\r\nexport default ItemStatusFilter;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'All' },\r\n        { name: 'active', label: 'Active' },\r\n        { name: 'done', label: 'Done' }\r\n    ];\r\n\r\n    render() {\r\n\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n          const isActive = filter === name;\r\n          const variantActive = isActive ? 'contained' : '';\r\n          const colorActive = isActive ? 'primary' : '';\r\n\r\n          return (\r\n            <Button\r\n            key={name}\r\n            onClick={() => onFilterChange(name)}\r\n            variant={variantActive}\r\n            color={colorActive} >\r\n                {label}\r\n            </Button>\r\n          );\r\n        });\r\n\r\n        return (\r\n            <ButtonGroup variant='outlined' aria-label=\"button group\" className='item-status-filter'>\r\n                {buttons}\r\n            </ButtonGroup>\r\n        );\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NotificationImportantIcon from '@material-ui/icons/NotificationImportant';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport './todo-list-item.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n    formControl: {\r\n        flexDirection: \"row\",\r\n    }\r\n\r\n}));\r\n\r\nconst TodoListItem = ({ label,\r\n    onDeleted,\r\n    onToggleImportant,\r\n    onToggleDone,\r\n    important,\r\n    done,\r\n    editeItem,\r\n    isEditable }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n        classNames += ' done';\r\n    }\r\n\r\n    if (important) {\r\n        classNames += ' important'\r\n    }\r\n\r\n    if (isEditable) {\r\n        classNames += ' editable'\r\n    }\r\n\r\n    const notToggleDone = e => e.preventDefault();\r\n\r\n    return (\r\n        <Paper className={classNames}>\r\n            <span\r\n                className=\"todo-list-item__label\"\r\n                onClick={isEditable ? notToggleDone : onToggleDone}>\r\n                {label}\r\n            </span>\r\n            <FormControl className={classes.formControl}>\r\n                <IconButton disabled={isEditable} type=\"button\" color=\"secondary\" className={classes.iconButton} aria-label=\"delete\"\r\n                    onClick={onDeleted}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n                <Divider className={classes.divider} orientation=\"vertical\" />\r\n                <IconButton disabled={isEditable} type=\"button\" color=\"primary\" className={classes.iconButton} aria-label=\"important\"\r\n                    onClick={onToggleImportant}>\r\n                    <NotificationImportantIcon />\r\n                </IconButton>\r\n                <Divider className={classes.divider} orientation=\"vertical\" />\r\n                <IconButton disabled={isEditable} type=\"button\" className={classes.iconButton} aria-label=\"edit\"\r\n                    onClick={editeItem}>\r\n                    <EditIcon />\r\n                </IconButton>\r\n            </FormControl>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import TodoListItem from './todo-list-item';\r\nexport default TodoListItem;\r\n","import TodoList from './todo-list';\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({\r\n  todos,\r\n  onDeleted,\r\n  onToggleImportant,\r\n  onToggleDone,\r\n  editeItem,\r\n  isEditable }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n          editeItem={() => editeItem(id)}\r\n          isEditable={ isEditable }\r\n          />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      { elements}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Input from '@material-ui/core/Input';\r\nimport Formhelpertext from '@material-ui/core/Formhelpertext';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport './item-add-form.scss';\r\n\r\nconst useStyles = theme => ({\r\n    formControl: {\r\n        flex: 1,\r\n        paddingLeft: '1.25rem',\r\n    },\r\n    input: {\r\n        marginRight: '1.25rem',\r\n    },\r\n    helpertext: {\r\n        color: '#f44336',\r\n    }\r\n});\r\n\r\nclass ItemAddForm extends Component {\r\n    state = {\r\n        label: '',\r\n        isError: false,\r\n    };\r\n\r\n    minInputLength = 8;\r\n\r\n    onLabelChange = e => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n\r\n        this.setState({\r\n            isError: 0 < e.target.value.length && e.target.value.length < this.minInputLength\r\n        });\r\n    };\r\n\r\n    nonSubmit = e => e.preventDefault();\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n\r\n    onEditableHandler = e => {\r\n        e.preventDefault();\r\n        const { onEditableSave } = this.props;\r\n        const { label } = this.state;\r\n        onEditableSave(label);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.isEditable !== prevProps.isEditable) {\r\n            this.props.isEditable ? this.setState({ label: this.props.editableValue }) : this.setState({ label: '' });\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { classes, isEditable } = this.props;\r\n        const { label, isError } = this.state;\r\n\r\n        const isSubmitable = label.length >= this.minInputLength;\r\n\r\n        const changeSubmit = isEditable ? this.onEditableHandler : this.onSubmit;\r\n\r\n        return (\r\n            <Paper component=\"form\" className=\"item-add-form__wrap\"\r\n                onSubmit={isSubmitable ? changeSubmit : this.nonSubmit}>\r\n                <FormControl className={classes.formControl}>\r\n                    <Input\r\n                        error={isError}\r\n                        className={classes.input}\r\n                        placeholder=\"Enter new task\"\r\n                        label=\"Enter new task\"\r\n                        inputProps={{ 'aria-label': 'Enter new task' }}\r\n                        onChange={this.onLabelChange}\r\n                        value={label}\r\n                        helpertext=\"Incorrect entry.\"\r\n                    />\r\n\r\n                    {isError && (\r\n                        <Formhelpertext id=\"standard-weight-helper-text\" className={classes.helpertext}>\r\n                            Length is too short\r\n                        </Formhelpertext>\r\n                    )}\r\n                </FormControl>\r\n                <Button className='item-add-form'\r\n                        startIcon={isEditable ? <SaveIcon/> : <QueueIcon/>}\r\n                        onClick={isEditable ? this.onEditableHandler : this.onSubmit}\r\n                        disabled={label.length < this.minInputLength}>\r\n                        {isEditable ? 'Save' : 'Add Item'}\r\n                </Button>\r\n            </Paper>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withStyles(useStyles)(ItemAddForm);\r\n","import ItemAddForm from './item-add-form';\r\nexport default ItemAddForm;\r\n","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport AppTitle from '../app-title/';\r\nimport AppStatus from '../app-status/';\r\nimport SearchPanel from '../search-panel/';\r\nimport ItemStatusFilter from '../item-status-filter/';\r\nimport TodoList from '../todo-list/';\r\nimport ItemAddForm from '../item-add-form/';\r\nimport './App.scss';\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  item: {\r\n    maxWidth: '470px',\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n\r\n  startId = 1;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Make Awesome App')\r\n    ],\r\n    term: '',\r\n    filter: 'all',\r\n    isEditable: false,\r\n    editableId: null\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: new Date().valueOf()\r\n    }\r\n  }\r\n\r\n  onEditableSave = value => {\r\n    this.setState(({ todoData, isEditable, editableId }) => {\r\n      const idx = todoData.findIndex((el) => el.id === this.state.editableId);\r\n      const changeItemLabel = todoData[idx];\r\n      changeItemLabel.label = value;\r\n      const newArray = [\r\n        ...todoData.slice(0, idx),\r\n        changeItemLabel,\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n\r\n      return {\r\n        todoData: newArray,\r\n        isEditable: false,\r\n        editableId: null\r\n      };\r\n    })\r\n  }\r\n\r\n  editeItem = id => {\r\n    let { todoData } = this.state;\r\n    const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n    this.setState({\r\n      isEditable: true,\r\n      editableId: todoData[idx].id\r\n    });\r\n  }\r\n\r\n  deleteItem = id => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n      const newArray = [\r\n        ...todoData.slice(0, idx),\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    })\r\n  }\r\n\r\n  addItem = text => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArr = [\r\n        ...todoData,\r\n        newItem\r\n      ];\r\n\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = {\r\n      ...oldItem,\r\n      [propName]: !oldItem[propName]\r\n    };\r\n\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      };\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({ term });\r\n  };\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term) > -1;\r\n    });\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  }\r\n\r\n  toLocalStorage = () => {\r\n    let { todoData } = this.state;\r\n    localStorage.setItem('todoData', JSON.stringify(todoData));\r\n  };\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (this.state !== prevState) {\r\n      this.toLocalStorage();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ArrayFromLocalStorage = JSON.parse(localStorage.getItem(\"todoData\"));\r\n    if (null !== ArrayFromLocalStorage) {\r\n      this.setState(({ todoData }) => {\r\n        return {\r\n          todoData: ArrayFromLocalStorage\r\n        };\r\n      });\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    const { todoData, term, filter, isEditable, editableId } = this.state;\r\n\r\n    const visibleItems = this.filter(\r\n      this.search(todoData, term), filter);\r\n\r\n    const doneCount = todoData\r\n      .filter((el) => el.done).length;\r\n\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    let editableValue = '';\r\n\r\n    if (editableId && isEditable) {\r\n      const item = todoData.find((el) => el.id === editableId);\r\n      editableValue = item.label;\r\n    }\r\n\r\n    return (\r\n      <Grid container justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n        <Grid item xs={8} component=\"main\" className={classes.item}>\r\n          <Card className={classes.card} variant=\"outlined\">\r\n            <CardContent className=\"app__top-wrap\">\r\n              <AppTitle />\r\n              <AppStatus\r\n                toDo={todoCount} done={doneCount} />\r\n              <SearchPanel\r\n                onSearchChange={this.onSearchChange} />\r\n              <ItemStatusFilter\r\n                filter={filter}\r\n                onFilterChange={this.onFilterChange} />\r\n            </CardContent>\r\n            <CardContent className=\"\">\r\n              <TodoList\r\n                todos={visibleItems}\r\n                onDeleted={this.deleteItem}\r\n                onToggleImportant={this.onToggleImportant}\r\n                onToggleDone={this.onToggleDone}\r\n                editeItem={this.editeItem}\r\n                isEditable={this.state.isEditable}/>\r\n              <ItemAddForm\r\n                onItemAdded={this.addItem}\r\n                onEditableSave={this.onEditableSave}\r\n                isEditable={this.state.isEditable}\r\n                editableValue={editableValue} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withStyles(useStyles)(App);\r\n","import App from './App';\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}