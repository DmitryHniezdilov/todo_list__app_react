{"version":3,"sources":["components/app-title/index.js","components/app-title/app-title.js","components/app-status/index.js","components/app-status/app-status.js","components/search-panel/search-panel.js","components/search-panel/index.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/todo-list-item.js","components/todo-list-item/index.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/item-add-form.js","components/item-add-form/index.js","components/app/App.js","components/app/index.js","index.js"],"names":["AppTitle","Typography","variant","component","AppStatus","toDo","done","item","xs","md","color","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","classes","this","Input","className","input","placeholder","inputProps","onChange","Component","withStyles","theme","marginLeft","spacing","marginRight","marginBottom","ItemStatusFilter","buttons","name","label","filter","onFilterChange","map","isActive","variantActive","colorActive","Button","onClick","ButtonGroup","aria-label","useStyles","makeStyles","iconButton","padding","divider","height","margin","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","classNames","Paper","IconButton","type","Divider","orientation","TodoList","todos","elements","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","root","InputBase","startIcon","display","alignItems","flex","App","startId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","toLocalStorage","localStorage","setItem","JSON","stringify","arr","propName","oldItem","items","length","toLowerCase","indexOf","prevState","ArrayFromLocalStorage","parse","getItem","visibleItems","search","doneCount","todoCount","Grid","container","justify","Card","card","CardContent","maxWidth","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee6e476f.chunk.js","sourcesContent":["import AppTitle from './app-title';\r\nexport default AppTitle;\r\n","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './app-title.scss';\r\n\r\nconst AppTitle = () => {\r\n  return (\r\n    <Typography variant=\"h4\" component=\"h1\">\r\n      Todo List\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default AppTitle;\r\n","import AppStatus from './app-status';\r\nexport default AppStatus;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './app-status.scss';\r\n\r\nconst AppStatus = ({ toDo, done }) => {\r\n  return (\r\n      <Typography item xs={3} md={2} variant=\"h6\" component=\"h2\" color=\"textSecondary\">\r\n        {toDo} more to do, {done} done\r\n        </Typography>\r\n  )\r\n}\r\n\r\nexport default AppStatus;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport './search-panel.css';\r\n\r\nconst useStyles = theme => ({\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        marginBottom: '1px',\r\n    },\r\n});\r\n\r\nclass SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Input\r\n                variant=\"outlined\"\r\n                className={classes.input}\r\n                placeholder=\"Type to search\"\r\n                inputProps={{ 'aria-label': 'Type to search' }}\r\n                value={this.state.term}\r\n                onChange={this.onSearchChange}\r\n            />\r\n        );\r\n    };\r\n};\r\n\r\nexport default withStyles(useStyles)(SearchPanel);\r\n","import SearchPanel from './search-panel';\r\nexport default SearchPanel;\r\n","import ItemStatusFilter from './item-status-filter';\r\nexport default ItemStatusFilter;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'All' },\r\n        { name: 'active', label: 'Active' },\r\n        { name: 'done', label: 'Done' }\r\n    ];\r\n\r\n    render() {\r\n\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n          const isActive = filter === name;\r\n          const variantActive = isActive ? 'contained' : '';\r\n          const colorActive = isActive ? 'primary' : '';\r\n\r\n          return (\r\n            <Button\r\n            key={name}\r\n            onClick={() => onFilterChange(name)}\r\n            variant={variantActive}\r\n            color={colorActive} >\r\n                {label}\r\n            </Button>\r\n          );\r\n        });\r\n\r\n        return (\r\n            <ButtonGroup variant='outlined' aria-label=\"button group\" className='item-status-filter'>\r\n                {buttons}\r\n            </ButtonGroup>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NotificationImportantIcon from '@material-ui/icons/NotificationImportant';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n\r\n}));\r\n\r\nconst TodoListItem = ({ label,\r\n    onDeleted,\r\n    onToggleImportant,\r\n    onToggleDone,\r\n    important,\r\n    done }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n        classNames += ' done';\r\n    }\r\n\r\n    if (important) {\r\n        classNames += ' important'\r\n    }\r\n\r\n    return (\r\n        <Paper className={classNames}>\r\n            <span\r\n                className=\"todo-list-item-label\"\r\n                onClick={onToggleDone}>\r\n                {label}\r\n            </span>\r\n            <IconButton type=\"button\" color=\"secondary\" className={classes.iconButton} aria-label=\"delete\"\r\n                onClick={onDeleted}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n            <IconButton type=\"button\" color=\"primary\" className={classes.iconButton} aria-label=\"important\"\r\n                onClick={onToggleImportant}>\r\n                <NotificationImportantIcon />\r\n            </IconButton>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import TodoListItem from './todo-list-item';\r\nexport default TodoListItem;\r\n","import TodoList from './todo-list';\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({\r\n  todos,\r\n  onDeleted,\r\n  onToggleImportant,\r\n  onToggleDone }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n          />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      { elements}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\n\r\nimport './item-add-form.css';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        padding: '6px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nclass ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n\r\n            <Paper component=\"form\" className={classes.root}\r\n                onSubmit={this.onSubmit}>\r\n                <InputBase\r\n                    className={classes.input}\r\n                    placeholder=\"Enter new task\"\r\n                    inputProps={{ 'aria-label': 'Enter new task' }}\r\n                    onChange={this.onLabelChange}\r\n                    value={this.state.label}\r\n                />\r\n                <Button className='item-add-form'\r\n                    startIcon={<QueueIcon />}\r\n                    onClick={this.onSubmit}>\r\n                    Add Item\r\n                </Button>\r\n            </Paper>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withStyles(useStyles)(ItemAddForm);\r\n","import ItemAddForm from './item-add-form';\r\nexport default ItemAddForm;\r\n","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport AppTitle from '../app-title/';\r\nimport AppStatus from '../app-status/';\r\nimport SearchPanel from '../search-panel/';\r\nimport ItemStatusFilter from '../item-status-filter/';\r\nimport TodoList from '../todo-list/';\r\nimport ItemAddForm from '../item-add-form/';\r\nimport './App.scss';\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  item: {\r\n    maxWidth: '470px',\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n\r\n  startId = 1;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Learn Redux'),\r\n      this.createTodoItem('Make Awesome App')\r\n    ],\r\n    term: '',\r\n    filter: 'all'\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.startId++\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n      const newArray = [\r\n        ...todoData.slice(0, idx),\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    })\r\n  }\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArr = [\r\n        ...todoData,\r\n        newItem\r\n      ];\r\n\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = {\r\n      ...oldItem,\r\n      [propName]: !oldItem[propName]\r\n    };\r\n\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      };\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({ term });\r\n  };\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term) > -1;\r\n    });\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  }\r\n\r\n  toLocalStorage = () => {\r\n    let { todoData } = this.state;\r\n    localStorage.setItem('todoData', JSON.stringify(todoData));\r\n  };\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (this.state !== prevState) {\r\n      this.toLocalStorage();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ArrayFromLocalStorage = JSON.parse(localStorage.getItem(\"todoData\"));\r\n    if (null !== ArrayFromLocalStorage) {\r\n      this.setState(({ todoData }) => {\r\n        return {\r\n          todoData: ArrayFromLocalStorage\r\n        };\r\n      });\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    const { todoData, term, filter } = this.state;\r\n\r\n    const visibleItems = this.filter(\r\n      this.search(todoData, term), filter);\r\n\r\n    const doneCount = todoData\r\n      .filter((el) => el.done).length;\r\n\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <Grid container justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n        <Grid item xs={8} component=\"main\" className={classes.item}>\r\n          <Card className={classes.card} variant=\"outlined\">\r\n            <CardContent className=\"app__top-wrap\">\r\n              <AppTitle />\r\n              <AppStatus\r\n                toDo={todoCount} done={doneCount} />\r\n              <SearchPanel\r\n                onSearchChange={this.onSearchChange} />\r\n              <ItemStatusFilter\r\n                filter={filter}\r\n                onFilterChange={this.onFilterChange} />\r\n            </CardContent>\r\n            <CardContent className=\"\">\r\n              <TodoList\r\n                todos={visibleItems}\r\n                onDeleted={this.deleteItem}\r\n                onToggleImportant={this.onToggleImportant}\r\n                onToggleDone={this.onToggleDone} />\r\n              <ItemAddForm\r\n                onItemAdded={this.addItem} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withStyles(useStyles)(App);\r\n","import App from './App';\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}