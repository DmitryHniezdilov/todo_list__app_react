{"version":3,"sources":["components/app-title/index.js","components/app-title/app-title.js","components/app-status/index.js","components/app-status/app-status.js","components/search-panel/search-panel.js","components/search-panel/index.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/todo-list-item.js","components/todo-list-item/index.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/item-add-form.js","components/item-add-form/index.js","components/app/App.js","components/app/index.js","index.js"],"names":["AppTitle","Typography","variant","component","AppStatus","toDo","done","item","xs","md","color","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","classes","this","Input","className","input","placeholder","inputProps","onChange","Component","withStyles","theme","marginLeft","spacing","marginRight","marginBottom","ItemStatusFilter","buttons","name","label","filter","onFilterChange","map","isActive","variantActive","colorActive","Button","onClick","ButtonGroup","aria-label","useStyles","makeStyles","iconButton","padding","divider","height","margin","formControl","flexDirection","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","classNames","Paper","FormControl","IconButton","type","Divider","orientation","TodoList","todos","elements","id","itemProps","ItemAddForm","minInputLength","onLabelChange","toSubmit","nonSubmit","preventDefault","onSubmit","onItemAdded","length","error","helperText","FormHelperText","startIcon","disabled","flex","paddingLeft","App","startId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","toLocalStorage","localStorage","setItem","JSON","stringify","arr","propName","oldItem","items","toLowerCase","indexOf","prevState","ArrayFromLocalStorage","parse","getItem","visibleItems","search","doneCount","todoCount","Grid","container","justify","alignItems","root","Card","card","CardContent","maxWidth","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46cf935f.chunk.js","sourcesContent":["import AppTitle from './app-title';\r\nexport default AppTitle;\r\n","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './app-title.scss';\r\n\r\nconst AppTitle = () => {\r\n  return (\r\n    <Typography variant=\"h4\" component=\"h1\">\r\n      Todo List\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default AppTitle;\r\n","import AppStatus from './app-status';\r\nexport default AppStatus;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './app-status.scss';\r\n\r\nconst AppStatus = ({ toDo, done }) => {\r\n  return (\r\n      <Typography item xs={3} md={2} variant=\"h6\" component=\"h2\" color=\"textSecondary\">\r\n        {toDo} more to do, {done} done\r\n        </Typography>\r\n  )\r\n}\r\n\r\nexport default AppStatus;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport './search-panel.css';\r\n\r\nconst useStyles = theme => ({\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        marginBottom: '1px',\r\n    },\r\n});\r\n\r\nclass SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Input\r\n                variant=\"outlined\"\r\n                className={classes.input}\r\n                placeholder=\"Type to search\"\r\n                inputProps={{ 'aria-label': 'Type to search' }}\r\n                value={this.state.term}\r\n                onChange={this.onSearchChange}\r\n            />\r\n        );\r\n    };\r\n};\r\n\r\nexport default withStyles(useStyles)(SearchPanel);\r\n","import SearchPanel from './search-panel';\r\nexport default SearchPanel;\r\n","import ItemStatusFilter from './item-status-filter';\r\nexport default ItemStatusFilter;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'All' },\r\n        { name: 'active', label: 'Active' },\r\n        { name: 'done', label: 'Done' }\r\n    ];\r\n\r\n    render() {\r\n\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n          const isActive = filter === name;\r\n          const variantActive = isActive ? 'contained' : '';\r\n          const colorActive = isActive ? 'primary' : '';\r\n\r\n          return (\r\n            <Button\r\n            key={name}\r\n            onClick={() => onFilterChange(name)}\r\n            variant={variantActive}\r\n            color={colorActive} >\r\n                {label}\r\n            </Button>\r\n          );\r\n        });\r\n\r\n        return (\r\n            <ButtonGroup variant='outlined' aria-label=\"button group\" className='item-status-filter'>\r\n                {buttons}\r\n            </ButtonGroup>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NotificationImportantIcon from '@material-ui/icons/NotificationImportant';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport './todo-list-item.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n    formControl: {\r\n        flexDirection: \"row\",\r\n    }\r\n\r\n}));\r\n\r\nconst TodoListItem = ({ label,\r\n    onDeleted,\r\n    onToggleImportant,\r\n    onToggleDone,\r\n    important,\r\n    done }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n        classNames += ' done';\r\n    }\r\n\r\n    if (important) {\r\n        classNames += ' important'\r\n    }\r\n\r\n    return (\r\n        <Paper className={classNames}>\r\n            <span\r\n                className=\"todo-list-item__label\"\r\n                onClick={onToggleDone}>\r\n                {label}\r\n            </span>\r\n            <FormControl className={classes.formControl}>\r\n                <IconButton type=\"button\" color=\"secondary\" className={classes.iconButton} aria-label=\"delete\"\r\n                    onClick={onDeleted}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n                <Divider className={classes.divider} orientation=\"vertical\" />\r\n                <IconButton type=\"button\" color=\"primary\" className={classes.iconButton} aria-label=\"important\"\r\n                    onClick={onToggleImportant}>\r\n                    <NotificationImportantIcon />\r\n                </IconButton>\r\n                <Divider className={classes.divider} orientation=\"vertical\" />\r\n                <IconButton type=\"button\" color=\"action.active\" className={classes.iconButton} aria-label=\"important\">\r\n                    <EditIcon />\r\n                </IconButton>\r\n            </FormControl>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import TodoListItem from './todo-list-item';\r\nexport default TodoListItem;\r\n","import TodoList from './todo-list';\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({\r\n  todos,\r\n  onDeleted,\r\n  onToggleImportant,\r\n  onToggleDone }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n          />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      { elements}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\n\r\nimport './item-add-form.scss';\r\n\r\nconst useStyles = theme => ({\r\n    formControl: {\r\n        flex: 1,\r\n        paddingLeft: '1.25rem',\r\n    },\r\n    input: {\r\n        marginRight: '1.25rem',\r\n    },\r\n    helperText: {\r\n        color: '#f44336',\r\n    }\r\n});\r\n\r\nclass ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: '',\r\n    };\r\n\r\n    minInputLength = 8 ;\r\n\r\n    onLabelChange = (e) => {\r\n        const value = e.target.value;\r\n\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n\r\n        if( value > this.minInputLength ){\r\n            this.setState({\r\n                toSubmit: 'onSubmit'\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    nonSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n\r\n            <Paper component=\"form\" className=\"item-add-form__wrap\"\r\n                onSubmit={ (this.state.label.length >= this.minInputLength ) ? this.onSubmit : (e => { e.preventDefault(); })}>\r\n                <FormControl className={classes.formControl}>\r\n                    <Input\r\n                        error={this.state.label.length && this.state.label.length < this.minInputLength}\r\n                        className={classes.input}\r\n                        placeholder=\"Enter new task\"\r\n                        label=\"Enter new task\"\r\n                        inputProps={{ 'aria-label': 'Enter new task' }}\r\n                        onChange={this.onLabelChange}\r\n                        value={this.state.label}\r\n                        helperText=\"Incorrect entry.\"\r\n                    />\r\n                    <FormHelperText id=\"standard-weight-helper-text\" className={classes.helperText}>\r\n                        {(0 < this.state.label.length && this.state.label.length < this.minInputLength) ? 'Length is too short' : ''}\r\n                    </FormHelperText>\r\n                </FormControl>\r\n                <Button className='item-add-form'\r\n                    startIcon={<QueueIcon />}\r\n                    onClick={this.onSubmit}\r\n                    disabled={this.state.label.length < this.minInputLength}>\r\n                    Add Item\r\n                </Button>\r\n            </Paper>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withStyles(useStyles)(ItemAddForm);\r\n","import ItemAddForm from './item-add-form';\r\nexport default ItemAddForm;\r\n","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport AppTitle from '../app-title/';\r\nimport AppStatus from '../app-status/';\r\nimport SearchPanel from '../search-panel/';\r\nimport ItemStatusFilter from '../item-status-filter/';\r\nimport TodoList from '../todo-list/';\r\nimport ItemAddForm from '../item-add-form/';\r\nimport './App.scss';\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  item: {\r\n    maxWidth: '470px',\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n\r\n  startId = 1;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Learn Redux'),\r\n      this.createTodoItem('Make Awesome App')\r\n    ],\r\n    term: '',\r\n    filter: 'all'\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.startId++\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n      const newArray = [\r\n        ...todoData.slice(0, idx),\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    })\r\n  }\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArr = [\r\n        ...todoData,\r\n        newItem\r\n      ];\r\n\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = {\r\n      ...oldItem,\r\n      [propName]: !oldItem[propName]\r\n    };\r\n\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      };\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({ term });\r\n  };\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term) > -1;\r\n    });\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  }\r\n\r\n  toLocalStorage = () => {\r\n    let { todoData } = this.state;\r\n    localStorage.setItem('todoData', JSON.stringify(todoData));\r\n  };\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (this.state !== prevState) {\r\n      this.toLocalStorage();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ArrayFromLocalStorage = JSON.parse(localStorage.getItem(\"todoData\"));\r\n    if (null !== ArrayFromLocalStorage) {\r\n      this.setState(({ todoData }) => {\r\n        return {\r\n          todoData: ArrayFromLocalStorage\r\n        };\r\n      });\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    const { todoData, term, filter } = this.state;\r\n\r\n    const visibleItems = this.filter(\r\n      this.search(todoData, term), filter);\r\n\r\n    const doneCount = todoData\r\n      .filter((el) => el.done).length;\r\n\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <Grid container justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n        <Grid item xs={8} component=\"main\" className={classes.item}>\r\n          <Card className={classes.card} variant=\"outlined\">\r\n            <CardContent className=\"app__top-wrap\">\r\n              <AppTitle />\r\n              <AppStatus\r\n                toDo={todoCount} done={doneCount} />\r\n              <SearchPanel\r\n                onSearchChange={this.onSearchChange} />\r\n              <ItemStatusFilter\r\n                filter={filter}\r\n                onFilterChange={this.onFilterChange} />\r\n            </CardContent>\r\n            <CardContent className=\"\">\r\n              <TodoList\r\n                todos={visibleItems}\r\n                onDeleted={this.deleteItem}\r\n                onToggleImportant={this.onToggleImportant}\r\n                onToggleDone={this.onToggleDone} />\r\n              <ItemAddForm\r\n                onItemAdded={this.addItem} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withStyles(useStyles)(App);\r\n","import App from './App';\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}